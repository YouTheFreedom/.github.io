<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>github 搭配 hexo 快速搭建个人博客</title>
    <link href="/2021/08/01/github-%E6%90%AD%E9%85%8D-hexo-%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2021/08/01/github-%E6%90%AD%E9%85%8D-hexo-%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h3 id="什么是-HEXO"><a href="#什么是-HEXO" class="headerlink" title="什么是 HEXO"></a>什么是 HEXO</h3><p>Hexo 是一个基于nodejs 的静态博客网站生成器，作者是来自台湾的 <a href="http://mailto:tommy351@gmail.com/">Tommy Chen</a>。</p><p>官方网站推荐 Hexo 的主要原因有：</p><ul><li>Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</li><li>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</li><li>只需一条指令即可部署到 GitHub Pages, Heroku 或其他平台。</li><li>强大的 API 带来无限的可能，与数种模板引擎（EJS，Pug，Nunjucks）和工具（Babel，PostCSS，Less/Sass）轻易集成</li></ul><p>对于只是想专注于发布博客内容，又避免花太多时间维护网站的人来说，将自己的文章搭配上 hexo 好看的页面，放在 Github 上作为一个项目托管，或许是个不错的选择。</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>推荐安装长期维护的稳定版的 <a href="https://nodejs.org/zh-cn/">Node.js</a> ，例如我选择的是 14.17.4 长期支持版。</p><p>下载安装包后，除了安装位置根据个人喜好而定，其他选项全部默认，一直到安装完毕。</p><p>输入<code>node -v</code>和<code>npm -v</code>，如果出现版本号，那么就安装成功了。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">node -vv14.17.4<span class="token function">npm</span> -v<span class="token number">6.14</span>.14<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="npm-添加国内镜像源"><a href="#npm-添加国内镜像源" class="headerlink" title="npm 添加国内镜像源"></a>npm 添加国内镜像源</h3><p>node.js 是开发环境，npm 相当于Ubuntu 中的包管理工具 apt，我们安装完 Ubuntu 为了以后更新升级软件更快更方便，会把安装源更换为国内的地址，所以同样的道理，我们把 npm 安装源改为淘宝。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p><a href="https://git-scm.com/">Git</a> 是一个免费的开源分布式版本控制系统，旨在快速高效地处理从小到大的所有项目。</p><p>作为一名合格的程序员，会用 Git 管理自己的代码是项基本技能，但它的功能不止于此，还可以写笔记，搭建博客，还能做自己的云图床。</p><p>安装时依旧一路默认，位置自选，随后在任意目录下点击右键，就可以看到菜单新增的两个 Git 选项。</p><p><img src="https://rebelutopia.com/picBed/img/image-20210801071926568.png"></p><h3 id="创建-GitHub-仓库"><a href="#创建-GitHub-仓库" class="headerlink" title="创建 GitHub 仓库"></a>创建 GitHub 仓库</h3><p>点击主页右上角 + 图标，选择 New repository 创建新仓库。</p><p><img src="https://rebelutopia.com/picBed/img/20210801081426.png"></p><p>创建一个和你用户名相同的仓库，后缀是 .github.io，一定要和你的 Github 账户名一模一样，不然无法被识别，辛苦搭建好的网站也会访问不到，我之前已经创建过同名仓库，所以会报红，请自动忽略。在创建仓库的下面有个配置选项可以设置默认分支，第二个红框内容就是。</p><p><img src="https://rebelutopia.com/picBed/img/20210801081722.png"></p><p>点击句末的 setting 进入设置界面，默认的是 main 分支，添上你想要指定的默认分支，比如 master 点击 Update 就可以了。</p><p><img src="https://rebelutopia.com/picBed/img/20210801082423.png"></p><p>再次返回创建仓库的界面，点击 Create repository ，创建仓库完成。</p><p>进入仓库点击右上角的 Settings 选项。</p><p><img src="https://rebelutopia.com/picBed/img/20210801083357.png"></p><p>下拉页面找到 Github Pages，进入该页面设置主题。</p><p><img src="https://rebelutopia.com/picBed/img/20210801083511.png"></p><p>点击 Choose a theme，随便选择一个就好，毕竟 hexo 才是我们想要展示的内容，返回后就在绿色的提示框中找到你的 github 博客页面，点击即可访问。Source 选项可选择你想要展示的项目分支，这样你就可以通过切换分支，实现同一个地址访问不同内容的博客。</p><p><img src="https://rebelutopia.com/picBed/img/20210801083747.png"></p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在本地电脑上新建文件夹作为 hexo 博客根目录，进入文件夹右键点击 Git Bash Here ，在 git 控制台输入安装命令：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-cli -gnpm i hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>验证是否安装成功。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>初始化博客目录文件结构和相应配置，安装必备组件，你会看到博客目录下生成了若干新文件。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 初始化</span>hexo init<span class="token comment"># 安装必备组件</span><span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>在正式提交到 Github 上之前，我们完全可以在本地预览下搭建起的博客效果如何。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 生成静态网页</span>hexo g<span class="token comment"># 打开本地服务器</span>hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>浏览器打开 <a href="http://localhost:4000/">http://localhost:4000/</a> ，就可以看到博客了，效果如下：</p><p><img src="https://rebelutopia.com/picBed/img/20210801132130.png"></p><h3 id="生成-SSH-添加到-GitHub"><a href="#生成-SSH-添加到-GitHub" class="headerlink" title="生成 SSH 添加到 GitHub"></a>生成 SSH 添加到 GitHub</h3><p>在 git bash 依次输入如下命令：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 配置你的 Github 账号</span><span class="token function">git</span> config --global user.name <span class="token string">"your github name"</span><span class="token comment"># 配置你的 Github 邮箱</span><span class="token function">git</span> config --global user.email <span class="token string">"your github email"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>点击右上方头像，在下拉列表选择 Settings。</p><p><img src="https://rebelutopia.com/picBed/img/20210801080838.png?raw=true"></p><p>在左侧列表点击 SSH and GPG keys。</p><p><img src="https://rebelutopia.com/picBed/img/20210801133546.png"></p><p>新建 SSH key，名称方便辨认用途就好，比如 blog 或 hexo。</p><p><img src="https://rebelutopia.com/picBed/img/20210801133702.png"></p><p>回到 git bash 窗口，输入如下命令，生成 key 文件，查看复制文件内容，并将其粘贴到页面的文本框中，点击 Add SSH key。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 生成密钥SSH key</span>ssh-keygen -t rsa -C <span class="token string">"your github email"</span><span class="token comment"># 查看生成的 key</span><span class="token function">cat</span> ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://rebelutopia.com/picBed/img/20210801134231.png"></p><p>在 git bash 中输入如下命令，配置没有问题的话，会显示出你的账户名，并提示验证成功。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://rebelutopia.com/picBed/img/20210801134708.png"></p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>打开博客根目录下的<code>_config.yml</code>文件，将 repository 修改为你自己的 github 项目地址，地址后面要记得加上 .git 后缀，branch 要和你之前配置 Github Pages 选择展示的分支一致，不然就看不到效果了。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Deployment</span><span class="token comment">## Docs: https://hexo.io/docs/one-command-deployment</span>deploy:  type: <span class="token function">git</span>  repository: https://github.com/YouTheFreedom/YouTheFreedom.github.io.git   branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="Github-部署-Hexo"><a href="#Github-部署-Hexo" class="headerlink" title="Github 部署 Hexo"></a>Github 部署 Hexo</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装 hexo 部署扩展插件</span><span class="token function">npm</span> <span class="token function">install</span> --save hexo-deployer-git<span class="token comment"># 生成静态网页</span>hexo g<span class="token comment"># 本地预览效果</span>hexo s<span class="token comment"># 上传到 github 上</span>hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>打开之前 Github Pages 配置返回的个人博客地址，就会发现页面和在本地预览的 hexo 博客一模一样，至此最简单的 hexo + Github 博客搭建工作就完成了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/07/31/hello-world/"/>
    <url>/2021/07/31/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
